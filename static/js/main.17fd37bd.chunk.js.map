{"version":3,"sources":["JSONValidationErrorList.js","fetchUrlSchemaFile.js","MonacoJSONEditor.js","Info/Info.js","Servers/Servers.js","JSONSchema/fields/JSONSchemaFields.js","JSONSchema/fields/JSONSchemaPrimitiveField.js","JSONSchema/JSONSchema.js","ContentDescriptor/ContentDescriptor.js","Params/Params.js","ExamplePairing/ExamplePairing.js","ExamplePairings/ExamplePairings.js","Errors/Errors.js","Methods/Methods.js","ContentDescriptors/ContentDescriptors.js","Documentation.js","fetchSchemaFromRpcDiscover.js","AppBar/AppBar.js","App.js","serviceWorker.js","index.js"],"names":["JSONValidationErrorList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classes","markers","length","react_default","a","createElement","className","wrapper","list","map","marker","key","message","startLineNumber","startColumn","React","Component","withStyles","theme","listStyle","color","palette","secondary","main","height","overflow","maxHeight","fetchUrlSchemaFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","schema","response","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","Error","concat","stop","_x","apply","arguments","MonacoJSONEditor","monaco","createRef","addCommands","bind","assertThisInitialized","getModels","metaSchema","defaultV","_","isEmpty","defaultValue","JSON","stringify","undefined","emptySchema","empty","localStorageSchema","window","localStorage","getItem","modelUri","Uri","parse","Math","random","model","createModel","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","validate","schemas","fileMatch","updateOptions","tabSize","options","language","formatOnType","formatOnPaste","autoIndent","editorInstance","create","current","objectSpread","setModel","setSelection","focus","onresize","_this2","layout","setTimeout","onDidChangeModelContent","changedSchema","getValue","setItem","onChange","editor","_this3","addAction","id","label","keybindings","chord","CtrlCmd","KEY_K","Backspace","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","e","setValue","KEY_R","result","prompt","KEY_V","onVimKeybind","setEditor","newValue","onChangeMarkers","getModelMarkers","dispose","vimMode","statusNode","innerHTML","document","getElementById","initVimMode","Fragment","style","ref","position","bottom","background","opacity","Info","_this$props","info","title","Typography_default","variant","gutterBottom","version","Chip_default","license","name","url","chip","component","clickable","href","description","react_markdown_default","source","termsOfService","Button_default","button","contact","email","padding","spacing","unit","margin","Servers","servers","index_es","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","row","scope","Link_default","JSONSchemaFields","properties","width","prop","oneOf","colSpan","p","src_JSONSchema_JSONSchema","type","pattern","required","includes","grey","PrimitiveField","root","cell","enum","join","JSONSchema","item","JSONSchemaPrimitiveField","arrayWithItems","items","contains","isArray","fields_JSONSchemaFields","ContentDescriptor","contentDescriptor","hideIcon","hideRequired","uiSchema","entries","ExpansionPanel_default","defaultExpanded","params","expanded","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","justifyContent","display","heading","secondaryHeading","summary","ExpansionPanelDetails_default","marginTop","marginBottom","fontSize","typography","pxToRem","flexBasis","flexShrink","text","alignSelf","Params","tableStart","tableEnd","src_ContentDescriptor_ContentDescriptor","paddingLeft","paddingRight","marginLeft","ExamplePairing","example","method","Grid_default","container","xs","main_default","assign","src","jsonrpc","value","reactJsonOptions","ExamplePairings","handleClickListItem","event","setState","anchorEl","currentTarget","handleMenuItemClick","index","selectedIndex","handleClose","examples","currentExample","header","aria-haspopup","aria-controls","aria-label","onClick","primary","open","Boolean","onClose","selected","ExamplePairing_ExamplePairing","Errors","errors","code","isObject","data","enableClipboard","Methods","methods","i","src_Params_Params","src_Errors_Errors","src_ExamplePairings_ExamplePairings","ContentDescriptors","components","contentDescriptors","_ref2","slicedToArray","val","Documentation","src_Info_Info","src_Servers_Servers","src_Methods_Methods","ContentDescriptors_ContentDescriptors","idCounter","fetchSchemaFromRpcDiscover","headers","Content-Type","body","ApplicationBar","alt","appBar","elevation","onChangeUrl","placeholder","control","checked","splitView","onSplitViewChange","App","_handleUrlChange","jsonOrRPC","newSchema","rpcResult","match","t1","refreshEditorData","handleUrlChange","debouncedHandleUrlChange","target","handleChange","defineProperty","parsedSchema","indentWidth","collapseStringsAfterLength","displayObjectSize","displayDataTypes","ui:title","ui:logoUrl","ui:inputPlaceholder","ui:defaultExpanded","setMarkers","debounce","urlParams","qs","location","search","ignoreQueryPrefix","refParser","dereference","refeshMarkers","AppBar_ApplicationBar","flexDirection","src_JSONValidationErrorList","MonacoJSONEditor_MonacoJSONEditor","Documentation_Documentation","hostname","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17fd37bd.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core';\n\n\nconst styles = theme => ({\n  list: {\n    listStyle: 'none',\n    color: theme.palette.secondary.main,\n    height: '100%',\n    overflow: 'scroll'\n  },\n  wrapper: {\n    maxHeight: '200px'\n  }\n})\n\nclass JSONValidationErrorList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  render() {\n    const { classes } = this.props;\n    if (!this.props.markers || this.props.markers.length === 0) return null;\n    return (\n      <div className={classes.wrapper}>\n        <ul className={classes.list}>\n          {this.props.markers && this.props.markers.map((marker) => {\n            return (\n              <li key={marker.message}>\n                {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(JSONValidationErrorList);","export default async (schema) => {\n  try {\n    const response = await fetch(schema);\n    return await response.json();\n  } catch(e) {\n    throw new Error(`Unable to download openrpc.json file located at the url: ${schema}`);\n  }\n};","import React from 'react';\nimport empty from 'json-schema-empty';\nimport * as monaco from 'monaco-editor';\nimport { initVimMode } from 'monaco-vim';\nimport fetchUrlSchemaFile from './fetchUrlSchemaFile';\nimport _ from 'lodash';\n\nexport default class MonacoJSONEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.monaco = React.createRef();\n    this.addCommands = this.addCommands.bind(this);\n  }\n  async componentDidMount() {\n    const existingModels = monaco.editor.getModels().length > 0;\n    let model;\n\n    if (!existingModels) {\n      const schema = await fetchUrlSchemaFile('https://raw.githubusercontent.com/open-rpc/meta-schema/b6a4e119e80db1a66cfd3a38dd6fee95bc3e9906/schema.json');\n      this.metaSchema = schema;\n      let defaultV = _.isEmpty(this.props.defaultValue) ? null : JSON.stringify(this.props.defaultValue, undefined, '  ');\n      const emptySchema = JSON.stringify(empty(schema), undefined, '\\t');\n      const localStorageSchema = window.localStorage.getItem('schema');\n      const defaultValue = defaultV || localStorageSchema || emptySchema;\n      const modelUri = window.monaco.Uri.parse(`inmemory://model/${Math.random()}-userSpec.json`);\n\n      model = monaco.editor.createModel(defaultValue, \"json\", modelUri);\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        validate: true,\n        schemas: [\n          {\n            fileMatch: ['*'],\n            schema\n          }\n        ]\n      })\n      model.updateOptions({ tabSize: 2 });\n    } else {\n      model = monaco.editor.getModels()[0];\n    }\n\n    const options = {\n      language: 'json',\n      theme: 'vs-dark',\n      options: {\n        formatOnType: true,\n        formatOnPaste: true,\n        autoIndent: true\n      }\n    }\n\n    this.editorInstance = monaco.editor.create(this.monaco.current, {\n      ...options\n    });\n\n    this.editorInstance.setModel(model);\n    this.editorInstance.setSelection(new monaco.Selection(3,13,3,13));\n\n    this.editorInstance.focus();\n    window.onresize = () => this.editorInstance.layout();\n    setTimeout(() => this.editorInstance.layout(), 1000);\n    this.editorInstance.onDidChangeModelContent(() => {\n      const changedSchema = this.editorInstance.getValue();\n      window.localStorage.setItem('schema', changedSchema);\n      this.props.onChange(changedSchema);\n    });\n    this.addCommands(this.editorInstance);\n  }\n  addCommands(editor) {\n\n    // reset editor to empty schema\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: 'empty-schema',\n\n      // A label of the action that will be presented to the user.\n      label: 'Reset to Empty Schema',\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.Backspace)\n      ],\n\n      // A precondition for this action.\n      precondition: null,\n\n      // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\n      keybindingContext: null,\n\n      contextMenuGroupId: 'navigation',\n\n      contextMenuOrder: 1.5,\n\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        let emptySchema;\n        try {\n          emptySchema = JSON.stringify(empty(this.metaSchema), undefined, '\\t');\n        } catch (e) {\n          if (JSON.stringify(this.metaSchema) === '{}') {\n            emptySchema = '{\\n\\t\\n}';\n          } else {\n            emptySchema = JSON.stringify(this.metaSchema, undefined, '\\t');\n          }\n        }\n        this.editorInstance.setValue(emptySchema);\n      }\n    });\n\n    // replace schema:\n    // Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: 'replace-meta-schema',\n\n      // A label of the action that will be presented to the user.\n      label: 'Replace Meta Schema',\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R)\n      ],\n\n      // A precondition for this action.\n      precondition: null,\n\n      // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\n      keybindingContext: null,\n\n      contextMenuGroupId: 'navigation',\n\n      contextMenuOrder: 1.5,\n\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        const metaSchema = JSON.parse(result)\n        this.metaSchema = metaSchema;\n        if (result != null) {\n          monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            enableSchemaRequest: true,\n            validate: true,\n            schemas: [\n              {\n                fileMatch: ['*'],\n                schema: metaSchema\n              }\n            ]\n          })\n        }\n        return null;\n      }\n    });\n\n    // Vim Mode:\n    // Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: 'vim-mode',\n\n      // A label of the action that will be presented to the user.\n      label: 'Vim Mode',\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        // chord\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V)\n      ],\n\n      // A precondition for this action.\n      precondition: null,\n\n      // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\n      keybindingContext: null,\n\n      contextMenuGroupId: 'navigation',\n\n      contextMenuOrder: 1.5,\n\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        this.onVimKeybind();\n        return null;\n      }\n    });\n  }\n  editorDidMount(editor, monaco) {\n    this.setEditor(editor, monaco);\n  }\n  onChange(newValue, e) {\n    this.props.onChangeMarkers(window.monaco.editor.getModelMarkers())\n  }\n  componentWillUnmount() {\n    this.editorInstance && this.editorInstance.dispose();\n  }\n  onVimKeybind(e) {\n    if (this.vimMode) {\n      this.vimMode.dispose();\n      this.statusNode.innerHTML = '';\n      this.vimMode = null;\n      return;\n    }\n    this.statusNode = document.getElementById('vim-status-bar');\n    this.vimMode = initVimMode(this.editorInstance, this.statusNode);\n    return;\n  }\n  render() {\n     return (\n       <>\n        <div style={{height: '100%'}} ref={this.monaco} />\n        <div id=\"vim-status-bar\" style={{position: 'fixed', bottom: '0', background: 'white', opacity: '0.5'}}></div>\n       </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\n\n\nconst styles = theme => ({\n  description: {\n    padding: `${theme.spacing.unit}px 0 ${theme.spacing.unit}px 0`\n  },\n  chip: {\n    margin: theme.spacing.unit\n  },\n  button: {\n    margin: theme.spacing.unit\n  }\n});\n\nclass Info extends Component {\n  render() {\n    const { schema, classes } = this.props;\n    if (!schema || !schema.info) { return null; }\n    const info = schema.info;\n    return (\n      <>\n        {info.title && <Typography variant=\"h2\" gutterBottom>{info.title}</Typography>}\n        {info.version && <Chip label={info.version}/>}\n        {info.license && info.license.name && info.license.url && <Chip className={classes.chip} component=\"a\" clickable color=\"primary\" href={info.license.url} label={info.license.name} />}\n        {info.description && <ReactMarkdown source={info.description}/>}\n        {info.termsOfService && <Button className={classes.button} variant=\"contained\" href={info.termsOfService}>Terms Of Service</Button>}\n        {info.contact && info.contact.url && info.contact.name && <Button className={classes.button} variant=\"contained\" href={info.contact.url}>Contact {info.contact.name}</Button>}\n        {info.contact && info.contact.email && <Button className={classes.button} variant=\"contained\" href={`mailto:${info.contact.email}`}>Email {info.contact.name}</Button>}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Info);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n\n});\n\nclass Servers extends Component {\n  render() {\n    const { schema, classes } = this.props;\n    if (!schema || !schema.servers || schema.servers.length === 0) {\n      return null;\n    }\n    return (\n      <>\n        <Typography variant=\"h2\">Servers</Typography>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Url</TableCell>\n              <TableCell align=\"right\">Description</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {schema.servers.map(row => (\n              <TableRow key={row.url}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\"><Link href={row.url}>{row.url}</Link></TableCell>\n                <TableCell align=\"right\">{row.description}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(Servers);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography } from '@material-ui/core';\nimport _ from 'lodash';\nimport JSONSchema from '../JSONSchema';\n\nconst styles = theme => ({\n  table: {\n    background: theme.palette.grey[50]\n  }\n});\n\nclass JSONSchemaFields extends Component {\n  render() {\n    const { schema, classes } = this.props;\n    if (!schema) { return null; }\n    return (\n      <>\n        {schema.title && <Typography variant=\"h5\">{schema.title}</Typography>}\n        {schema.description && <Typography variant=\"body1\">{schema.description}</Typography>}\n        {schema.properties &&\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell align=\"right\">Type</TableCell>\n                <TableCell align=\"right\" style={{ width: '90px' }}>Pattern</TableCell>\n                <TableCell align=\"right\">Required</TableCell>\n                <TableCell align=\"right\">Description</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {_.map(schema.properties, (prop, name) => {\n                if (prop.oneOf) {\n                  return (\n                    <TableRow>\n                      <TableCell colSpan=\"1\">\n                        {name}\n                      </TableCell>\n                      <TableCell colSpan=\"1\">\n                        <Typography variant=\"body1\" color=\"primary\">one of</Typography>\n                      </TableCell>\n                      <TableCell colSpan=\"5\">\n                        {prop.oneOf.map((p) => <JSONSchema schema={p} />)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                }\n                return (\n                  <TableRow key={name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {name}\n                    </TableCell>\n                    <TableCell align=\"right\">{prop.type}</TableCell>\n                    <TableCell align=\"right\">{prop.pattern}</TableCell>\n                    <TableCell align=\"right\">{schema.required && schema.required.includes(name) ? 'true' : 'false'}</TableCell>\n                    <TableCell align=\"right\">{prop.description}</TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n        }\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(JSONSchemaFields);","import React, { Component } from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TableHead, Table, withStyles } from '@material-ui/core';\n\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.grey[50],\n    width: '330px'\n  },\n  cell: {\n  }\n})\n\nclass PrimitiveField extends Component {\n  render() {\n    const { schema, classes } = this.props;\n    return (\n      <Table className={classes.root}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Field</TableCell>\n            <TableCell align=\"right\">Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.cell} align=\"left\">Type</TableCell>\n            <TableCell className={classes.cell} align=\"right\">{schema.type}</TableCell>\n          </TableRow>\n          {schema.pattern &&\n            <>\n              <TableRow>\n                <TableCell className={classes.cell} align=\"left\">Pattern</TableCell>\n                <TableCell className={classes.cell} align=\"right\">{schema.pattern}</TableCell>\n              </TableRow>\n            </>\n          }\n          {schema.enum &&\n            <>\n              <TableRow>\n                <TableCell className={classes.cell} align=\"left\">Enum</TableCell>\n                <TableCell className={classes.cell} align=\"right\">{schema.enum.join('  ')}</TableCell>\n              </TableRow>\n            </>\n          }\n        </TableBody>\n      </Table>\n\n    )\n  }\n}\n\nexport default withStyles(styles)(PrimitiveField);","import React, { Component } from 'react';\nimport { Typography } from '@material-ui/core';\nimport _ from 'lodash';\nimport JSONSchemaFields from './fields/JSONSchemaFields';\nimport PrimitiveField from './fields/JSONSchemaPrimitiveField';\n\nclass JSONSchema extends Component {\n  render() {\n    const { schema } = this.props;\n    if (!schema) { return null; }\n    if (_.isEmpty(schema)) { return null; }\n    if (schema && schema.type && !schema.properties && schema.oneOf) {\n      return (\n        <>\n          {schema.oneOf &&\n            <>\n              <Typography variant=\"body1\">One Of</Typography>}\n              {schema.oneOf.map((item) => {\n                return (\n                  <PrimitiveField schema={item} />\n                )\n              })}\n            </>\n          }\n      </>\n      )\n    }\n    let arrayWithItems = schema && schema.type === 'array' && (schema.items || schema.contains);\n    if (arrayWithItems) {\n      arrayWithItems = _.isArray(arrayWithItems) ? arrayWithItems : [arrayWithItems];\n      return (\n        <>\n          <Typography variant=\"body1\">Array Of</Typography>\n          <JSONSchemaFields schema={schema} />\n          {arrayWithItems.map((item) => {\n            return (\n              <PrimitiveField schema={item} />\n            )\n          })}\n        </>\n      )\n    }\n    if (schema && schema.properties) {\n      return <JSONSchemaFields schema={schema} />;\n    }\n\n    return <PrimitiveField schema={schema} />;\n  }\n}\n\nexport default JSONSchema;","import React, { Component } from 'react';\nimport { Typography, withStyles } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport JSONSchema from '../JSONSchema/JSONSchema';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit,\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    alignSelf: 'end'\n  },\n});\nclass ContentDescriptor extends Component {\n  render() {\n    const { contentDescriptor, classes, hideIcon, hideRequired, uiSchema } = this.props;\n    if (!contentDescriptor) { return null; }\n    let entries = Object.entries(contentDescriptor);\n    if (entries.length === 0) { return null; }\n    return (\n      <ExpansionPanel style={{ width: '100%' }} defaultExpanded={uiSchema && uiSchema.params['ui:defaultExpanded']} expanded={contentDescriptor.name ? null : true}>\n        <ExpansionPanelSummary expandIcon={(!contentDescriptor.name || hideIcon) ? null : <ExpandMoreIcon />} style={{ justifyContent: 'space-between' }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', height: '100%' }}>\n            <Typography className={classes.heading}>{contentDescriptor.name}</Typography>\n            <Typography className={classes.secondaryHeading}>{contentDescriptor.summary}</Typography>\n            {hideRequired ? null : <Typography className={classes.secondaryHeading}>{contentDescriptor.required ? 'true' : 'false'}</Typography>}\n          </div>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails style={{ display: 'block' }}>\n          <div>\n            {contentDescriptor.description && <ReactMarkdown source={contentDescriptor.description} />}\n            {contentDescriptor.schema &&\n              <>\n                <Typography variant=\"body1\" color=\"primary\" className={classes.schema}>schema</Typography>\n                <JSONSchema schema={contentDescriptor.schema} />\n              </>\n            }\n          </div>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n}\nexport default withStyles(styles)(ContentDescriptor)","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ContentDescriptor from '../ContentDescriptor/ContentDescriptor';\n\nconst styles = theme => ({\n  table: {\n    padding: theme.spacing.unit\n  },\n  tableStart: {\n    paddingLeft: theme.spacing.unit * 6,\n  },\n  tableEnd: {\n    paddingRight: `${theme.spacing.unit * 10}px !important`,\n  },\n  schema: {\n    marginLeft: theme.spacing.unit * 4\n  }\n});\n\nclass Params extends Component {\n  render() {\n    const { params, classes, uiSchema } = this.props;\n    if (!params || !params.length > 0) {\n      return null;\n    }\n    return (\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell key={1} className={classes.tableStart}>Parameter Name</TableCell>\n            <TableCell key={2} align=\"right\">Summary</TableCell>\n            <TableCell key={3} align=\"right\" className={classes.tableEnd}>Required</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell colSpan=\"6\">\n              {params.map(row => <ContentDescriptor key={row.name} contentDescriptor={row} uiSchema={uiSchema}/>) }\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(Params);","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Card, CardContent } from '@material-ui/core';\nimport ReactJson from 'react-json-view';\nimport ReactMarkdown from 'react-markdown';\nimport _ from 'lodash';\n\nexport default class ExamplePairing extends Component {\n  render() {\n    const { example, method } = this.props;\n    if (!example || _.isEmpty(example)) {\n      return null;\n    }\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={12}>\n          <ReactMarkdown source={example.description} />\n        </Grid>\n        <Grid item xs={6}>\n          <Card>\n            <CardContent>\n              {example.params && <ReactJson src={{\n                jsonrpc: \"2.0\",\n                method: method && method.name,\n                params: example.params.map(e => e.value),\n                id: 1\n              }} {...this.props.reactJsonOptions} />} \n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={6}>\n          <Card>\n            <CardContent>\n              {example.result && <ReactJson src={{\n                jsonrpc: \"2.0\",\n                result: example.result.value,\n                id: 1\n              }} {...this.props.reactJsonOptions} />}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ExamplePairing from '../ExamplePairing/ExamplePairing';\nimport { Typography, List, ListItem, ListItemText, Grid, MenuItem, Menu, withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  header: {\n   \n  }\n});\n\nclass ExamplePairings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      selectedIndex: 0\n    }\n  }\n  componentWillMount() {\n    if (!this.props || !this.props.examples) {\n      return;\n    }\n    this.setState({\n      currentExample: this.props.examples[0]\n    })\n  }\n  handleClickListItem = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  }\n  handleMenuItemClick = (event, index) => {\n    this.setState({ selectedIndex: index, anchorEl: null });\n  };\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n  render() {\n    const { examples, classes, method } = this.props;\n    const { anchorEl } = this.state;\n    if (!examples || examples.length === 0) {\n      return null;\n    }\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography className={classes.header} variant=\"h5\">Examples</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <List component=\"nav\">\n            <ListItem button aria-haspopup=\"true\" aria-controls=\"menu-menu\" aria-label=\"Method Examples\" onClick={this.handleClickListItem}>\n              <ListItemText primary={examples[this.state.selectedIndex].name} secondary={examples[this.state.selectedIndex].summary} />\n            </ListItem>\n            <Menu\n              id=\"menu-menu\"\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={this.handleClose}\n            >\n              {examples.map((example, index) => (\n                <MenuItem\n                  key={example.name}\n                  selected={index === this.state.selectedIndex}\n                  onClick={event => this.handleMenuItemClick(event, index)}\n                >\n                  {example.name}\n                </MenuItem>\n              ))}\n        </Menu>\n          </List>\n        </Grid>\n        <Grid item xs={12}>\n          <ExamplePairing method={method} example={this.props.examples[this.state.selectedIndex]} reactJsonOptions={this.props.reactJsonOptions}/>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ExamplePairings);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport _ from 'lodash';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography, Grid } from '@material-ui/core';\nimport ReactJson from 'react-json-view';\n\nconst styles = theme => ({\n  code: {\n    marginLeft: theme.spacing.unit\n  }\n});\n\nclass Errors extends Component {\n  render() {\n    const { errors, classes } = this.props;\n    if (!errors || errors.length === 0) {\n      return null;\n    }\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Errors</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Code</TableCell>\n                <TableCell>Message</TableCell>\n                <TableCell>Data</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {errors.map(row => (\n                <TableRow key={row.code}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.code}\n                  </TableCell>\n                  <TableCell>{row.message}</TableCell>\n                  <TableCell className={classes.code}>{_.isObject(row.data) ? <ReactJson src={row.data} {...this.props.reactJsonOptions} enableClipboard={false}/> : row.data}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(Errors);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ReactMarkdown from 'react-markdown';\nimport Params from '../Params/Params';\nimport ContentDescriptor from '../ContentDescriptor/ContentDescriptor';\nimport ExamplePairings from '../ExamplePairings/ExamplePairings';\nimport Errors from '../Errors/Errors';\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit,\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  result: {\n   \n  }\n});\n\nclass Methods extends Component {\n  render() {\n    const { schema, classes, uiSchema } = this.props;\n    if (!schema || !schema.methods || !schema.methods.length > 0) { return null; }\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"h3\" gutterBottom>Methods</Typography>\n        {schema.methods.map((method, i) => (\n          <ExpansionPanel key={i + method.name} defaultExpanded={uiSchema && uiSchema.methods['ui:defaultExpanded']}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography key={method.name} className={classes.heading}>{method.name}</Typography>\n              <Typography key={method.summary} className={classes.secondaryHeading}>{method.summary}</Typography>\n            </ExpansionPanelSummary>\n            {method.description &&\n              <ExpansionPanelDetails key=\"description\">\n                <ReactMarkdown source={method.description} />\n              </ExpansionPanelDetails>\n            }\n            {method.params && method.params.length > 0 &&\n              <ExpansionPanelDetails key=\"result-title\">\n                <Typography className={classes.result} variant=\"h5\">Params</Typography>\n              </ExpansionPanelDetails>\n            }\n            {method.params &&\n              <ExpansionPanelDetails key=\"params\">\n                <Params params={method.params} uiSchema={uiSchema}/>\n              </ExpansionPanelDetails>\n            }\n            {method.result &&\n              <ExpansionPanelDetails key=\"result-title\">\n                <Typography className={classes.result} variant=\"h5\">Result</Typography>\n              </ExpansionPanelDetails>\n            }\n            {method.result && method.result.schema && \n              <ExpansionPanelDetails key=\"result\">\n                <ContentDescriptor contentDescriptor={method.result} hideRequired={true} uiSchema={uiSchema}/>\n              </ExpansionPanelDetails>\n            }\n            {method.errors && method.errors.length > 0 && \n              <ExpansionPanelDetails key=\"result\">\n                <Errors errors={method.errors} reactJsonOptions={this.props.reactJsonOptions}/>\n              </ExpansionPanelDetails>\n            }\n            {method.examples && method.examples.length > 0 && \n              <ExpansionPanelDetails key=\"examples\">\n                <ExamplePairings examples={method.examples} method={method} uiSchema={uiSchema} reactJsonOptions={this.props.reactJsonOptions}/>\n              </ExpansionPanelDetails>\n            }\n          </ExpansionPanel>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Methods);","import React, { Component } from 'react';\nimport ContentDescriptor from '../ContentDescriptor/ContentDescriptor';\nimport { Typography } from '@material-ui/core';\n\nexport default class ContentDescriptors extends Component {\n  render() {\n    const { schema } = this.props;\n    if (!schema || !schema.components  || !schema.components.contentDescriptors) { return null; }\n    const entries = Object.entries(schema.components.contentDescriptors);\n    if (entries.length === 0) { return null; }\n    return (\n      <>\n        <Typography variant=\"h3\" gutterBottom>ContentDescriptors</Typography>\n        {entries.map(([key, val]) => {\n          return <ContentDescriptor key={key} contentDescriptor={val} uiSchema={this.props.uiSchema} hideRequired={true}/>\n        })}\n      </>\n    );\n  }\n}","import React from 'react';\nimport Info from './Info/Info';\nimport Servers from './Servers/Servers';\nimport Methods from './Methods/Methods';\nimport ContentDescriptors from './ContentDescriptors/ContentDescriptors';\n\nexport default class Documentation extends React.Component {\n  render() {\n    return (\n      <>\n          <Info schema={this.props.schema} uiSchema={this.props.uiSchema}/>\n          <Servers schema={this.props.schema} uiSchema={this.props.uiSchema}/>\n          <Methods schema={this.props.schema} uiSchema={this.props.uiSchema} reactJsonOptions={this.props.reactJsonOptions}/>\n          <ContentDescriptors schema={this.props.schema} uiSchema={this.props.uiSchema}></ContentDescriptors>\n      </>\n    )\n  }\n}","let idCounter = 0;\nexport default async (url) => {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        \"jsonrpc\": \"2.0\",\n        \"method\": \"rpc.discover\",\n        \"params\": [],\n        \"id\": idCounter++\n      })\n    });\n    return await response.json();\n  } catch(e) {\n    throw new Error(`Unable to call rpc.discover at: ${url}`);\n  }\n};","import React, { Component } from 'react';\nimport { AppBar, Toolbar, Typography, Grid, Paper, FormControlLabel, Checkbox, InputBase } from '@material-ui/core';\n\nexport default class ApplicationBar extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Grid container>\n              <img alt=\"open-rpc\" height=\"30\" width=\"30\" src={this.props.uiSchema && this.props.uiSchema.appBar['ui:logoUrl']} />\n              <Grid item xs={2}>\n                <Typography variant=\"h6\">{this.props.uiSchema && this.props.uiSchema.appBar['ui:title']}</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Paper style={{width: '100%', background: 'rgba(0, 0, 0, 0.1)', padding: '0px 10px 0px 10px'}} elevation={0}>\n                  <InputBase\n                    style={{width: '100%'}}\n                    onChange={this.props.onChangeUrl}\n                    placeholder={this.props.uiSchema && this.props.uiSchema.appBar['ui:inputPlaceholder']}\n                  />\n                </Paper>\n              </Grid>\n              <Grid item xs={2}>\n                <FormControlLabel\n                  style={{marginLeft: '30px', height: '30px'}}\n                  control={\n                    <Checkbox\n                      checked={this.props.splitView}\n                      onChange={this.props.onSplitViewChange}\n                      value=\"splitView\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Split View\"\n                />\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}","import React from 'react';\nimport JSONValidationErrorList from './JSONValidationErrorList';\nimport MonacoJSONEditor from './MonacoJSONEditor';\nimport refParser from 'json-schema-ref-parser';\nimport * as monaco from 'monaco-editor';\nimport Documentation from './Documentation';\nimport { debounce } from 'lodash';\nimport './App.css'\nimport fetchUrlSchemaFile from './fetchUrlSchemaFile';\nimport fetchSchemaFromRpcDiscover from './fetchSchemaFromRpcDiscover';\nimport AppBar from './AppBar/AppBar';\nimport qs from 'qs'\n\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markers: [],\n      parsedSchema: {},\n      splitView: true,\n      reactJsonOptions: {\n        name: false,\n        indentWidth: 2,\n        collapseStringsAfterLength: 15,\n        displayObjectSize: false,\n        displayDataTypes: false\n      },\n      uiSchema: {\n        appBar: {\n          \"ui:title\": \"OpenRPC Playground\",\n          \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n          \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\"\n        },\n        methods: {\n          \"ui:defaultExpanded\": false\n        },\n        params: {\n          \"ui:defaultExpanded\": false\n        }\n      }\n    }\n    this.refreshEditorData = this.refreshEditorData.bind(this);\n    this.setMarkers = debounce(this.setMarkers.bind(this), 300);\n    this.debouncedHandleUrlChange = debounce(this._handleUrlChange.bind(this), 300);\n  }\n  _handleUrlChange = async jsonOrRPC => {\n    let newSchema;\n    if (jsonOrRPC.match(/\\.json$/)) {\n      try {\n        newSchema = await fetchUrlSchemaFile(jsonOrRPC);\n      } catch (e) {\n        // show user error fetching schema file\n        return;\n      }\n    } else {\n      try {\n        const rpcResult = await fetchSchemaFromRpcDiscover(jsonOrRPC);\n        newSchema = rpcResult.result;\n      } catch (e) {\n        return;\n        // show user error fetching rpc.discover\n      }\n    }\n    monaco.editor.getModels()[0].setValue(JSON.stringify(newSchema, undefined, ' '));\n    this.refreshEditorData();\n    this.setState({\n      ...this.state,\n      defaultValue: newSchema\n    })\n  }\n\n  handleUrlChange = (event) => this.debouncedHandleUrlChange(event.target.value)\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.checked  })\n  }\n\n  async componentDidMount() {\n    let urlParams = qs.parse(window.location.search, { ignoreQueryPrefix: true })\n    if (urlParams['schemaUrl']) {\n      this._handleUrlChange(urlParams['schemaUrl'])\n    }\n    setTimeout(this.refreshEditorData, 1000);\n  }\n\n  refeshMarkers() {\n    setTimeout(() => {\n      const markers = monaco.editor.getModelMarkers();\n      this.setState({\n        markers\n      })\n    }, 1000)\n  }\n  async refreshEditorData() {\n    let parsedSchema\n    try {\n      parsedSchema = await refParser.dereference(JSON.parse(monaco.editor.getModels()[0].getValue()));\n    } catch (e) {\n\n    }\n\n    if (!parsedSchema) {\n      this.refeshMarkers();\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      parsedSchema: parsedSchema || this.state.parsedSchema\n    });\n\n    this.refeshMarkers();\n  }\n  setMarkers() {\n    this.refreshEditorData();\n  }\n  render() {\n    return (\n      <>\n        <AppBar uiSchema={this.state.uiSchema} splitView={this.state.splitView} onSplitViewChange={this.handleChange('splitView')} onChangeUrl={this.handleUrlChange}/>\n        <div style={{ height: \"100%\", display: 'flex', flexDirection: 'row' }}>\n          { this.state.splitView &&\n            <div style={{ display: 'flex', flexDirection: 'column', height: \"100%\", width: '100%' }} >\n              <JSONValidationErrorList markers={this.state.markers} />\n              <MonacoJSONEditor defaultValue={this.state.defaultValue} onChange={this.setMarkers.bind(this)} />\n            </div>\n          }\n          <div className='docs'>\n            <Documentation schema={this.state.parsedSchema} uiSchema={this.state.uiSchema} reactJsonOptions={this.state.reactJsonOptions}/>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App style={{height: \"100%\"}}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}